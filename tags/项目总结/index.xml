<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>项目总结 on yfliu 的 知识体系</title>
    <link>https://blog.yfliu.site/tags/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/</link>
    <description>Recent content in 项目总结 on yfliu 的 知识体系</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 22 Apr 2023 10:21:39 +0000</lastBuildDate><atom:link href="https://blog.yfliu.site/tags/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>物联网平台的多租户实现</title>
      <link>https://blog.yfliu.site/posts/notes/%E7%89%A9%E8%81%94%E7%BD%91%E5%B9%B3%E5%8F%B0%E7%9A%84%E5%A4%9A%E7%A7%9F%E6%88%B7%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Sat, 22 Apr 2023 10:21:39 +0000</pubDate>
      
      <guid>https://blog.yfliu.site/posts/notes/%E7%89%A9%E8%81%94%E7%BD%91%E5%B9%B3%E5%8F%B0%E7%9A%84%E5%A4%9A%E7%A7%9F%E6%88%B7%E5%AE%9E%E7%8E%B0/</guid>
      <description>物联网平台的多租户实现 一个开放的物联网平台，对多个客户实行租户隔离是十分必要的。不论是从数据安全，还是资源分配上来说，实行租户隔离都能够更好的实现逻辑数据隔离，提升数据安全性。
从理论上来说，实现多租户隔离有3种形式：
完全隔离：独立数据库 独立数据库是安全性，隔离性最高的方式 成本高，需要为每个租户架设一个独立数据库 半隔离：公用数据库，独立schema 一定程度的逻辑数据隔离 成本合理 伪隔离：共享数据表 仅采用TenantID标注数据所属租户 出于成本综合考虑，平台采用了第二种方式。
结构 在平台的架构上，我们选择了Postgresql作为主数据库。这个数据库承担了用户模块的相关内容，例如租户表，权限表，用户表。同时，还承担了物模型、设备状态的存储工作。
但是由于目前租户数量有限，量级较小，但是出于数据安全隔离角度考虑，我们选择了相对折中的独立Schema架构。
根据需求，我们的数据库架构大体如下：
以用户模块为例：
为了保证性能与可用性，我们针对Postgressql，采用了三节点集群，所有的集群之间数据完全同步。在数据库中，我们设立了 iot-sys-user DB, 这个db在所有高可用节点都是通过定期任务进行同步的。在数据库中，我们采用schema进行租户隔离。我们设计了以租户代码为编号的schema，每个schema下都具有完全相同的数据表结构：
t_sts_usr: 用户表 -&amp;gt; 负责存储用户ID，邮箱，salt，SHA256或国密加密后的密码，验证符 </description>
    </item>
    
  </channel>
</rss>
